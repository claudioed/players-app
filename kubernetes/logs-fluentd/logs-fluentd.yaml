# Configuration for logentry instances
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: newlog
  namespace: istio-system
spec:
  compiledTemplate: logentry
  params:
    severity: '"info"'
    timestamp: request.time
    variables:
      origin_workload: source.uid | "unknown"
      destination_workload : destination.uid | "unknown"
      source: source.labels["app"] | source.workload.name | "unknown"
      user: source.user | "unknown"
      destination: destination.labels["app"] | destination.workload.name | "unknown"
      responseCode: response.code | 0
      responseSize: response.size | 0
      latency: response.duration | "0ms"
      x-request-id: request.headers["x-request-id"] | "no tracing"
      x-b3-traceid: request.headers["x-b3-traceid"] | "no tracing"
      x-b3-spanid: request.headers["x-b3-spanid"] | "no tracing"
      x-b3-parentspanid: request.headers["x-b3-parentspanid"] | "no tracing"
      x-b3-sampled: request.headers["x-b3-sampled"] | "no tracing"
      x-b3-flags: request.headers["x-b3-flags"] | "no tracing"
      x-ot-span-context: request.headers["x-ot-span-context"] | "no tracing"
      traffic_type: context.reporter.kind | "unidentified"
    monitored_resource_type: '"UNSPECIFIED"'
---
# Configuration for a Fluentd handler
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: handler
  namespace: istio-system
spec:
  compiledAdapter: fluentd
  params:
    address: "fluentd-es.logging:24224"
---
# Rule to send logentry instances to the Fluentd handler
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: newlogtofluentd
  namespace: istio-system
spec:
  match: source.labels["app"] == "bets" && destination.labels["app"] != "telemetry" && context.reporter.kind == "inbound"
  actions:
    - handler: handler
      instances:
        - newlog
---


